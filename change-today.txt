diff --git a/.dockerignore b/.dockerignore
index c9b3a63..823a649 100644
--- a/.dockerignore
+++ b/.dockerignore
@@ -86,7 +86,9 @@ dist
 
 # Gatsby files
 .cache/
-public
+# public
+public/*.log
+public/temp/
 
 # Vuepress build output
 .vuepress/dist
diff --git a/Dockerfile b/Dockerfile
index a56e684..55ff20d 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -1,58 +1,67 @@
-# Stage 1: Dependencies installation
-FROM node:20-alpine AS deps
-RUN apk add --no-cache libc6-compat
-WORKDIR /app
+# syntax=docker.io/docker/dockerfile:1
 
-# Copy package files
-COPY package*.json ./
-RUN npm ci --only=production && npm cache clean --force
+FROM node:20-alpine AS base
 
-# Stage 2: Build stage
-FROM node:20-alpine AS builder
+# Install dependencies only when needed
+FROM base AS deps
+# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
+RUN apk add --no-cache libc6-compat
 WORKDIR /app
 
-# Copy package files and install all dependencies (including devDependencies)
-COPY package*.json ./
-RUN npm ci
+# Install dependencies based on the preferred package manager
+COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* .npmrc* ./
+RUN \
+  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
+  elif [ -f package-lock.json ]; then npm ci; \
+  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i --frozen-lockfile; \
+  else echo "Lockfile not found." && exit 1; \
+  fi
+
 
-# Copy source code
+# Rebuild the source code only when needed
+FROM base AS builder
+WORKDIR /app
+COPY --from=deps /app/node_modules ./node_modules
 COPY . .
 
-# Set environment variable for build
-ENV NODE_ENV=production
-ENV NEXT_TELEMETRY_DISABLED=1
+# Next.js collects completely anonymous telemetry data about general usage.
+# Learn more here: https://nextjs.org/telemetry
+# Uncomment the following line in case you want to disable telemetry during the build.
+# ENV NEXT_TELEMETRY_DISABLED=1
 
-# Build the application
-RUN npm run build
+RUN \
+  if [ -f yarn.lock ]; then yarn run build; \
+  elif [ -f package-lock.json ]; then npm run build; \
+  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm run build; \
+  else echo "Lockfile not found." && exit 1; \
+  fi
 
-# Stage 3: Runtime stage
-FROM node:20-alpine AS runner
+# Production image, copy all the files and run next
+FROM base AS runner
 WORKDIR /app
 
-# Set environment variables
 ENV NODE_ENV=production
-ENV NEXT_TELEMETRY_DISABLED=1
+# Uncomment the following line in case you want to disable telemetry during runtime.
+# ENV NEXT_TELEMETRY_DISABLED=1
 
-# Create non-root user for security
 RUN addgroup --system --gid 1001 nodejs
 RUN adduser --system --uid 1001 nextjs
 
-# Copy built application from builder stage
-COPY --from=builder /app/next.config.* ./
+# Copy public folder - ensure it exists in your project root
 COPY --from=builder /app/public ./public
-COPY --from=builder /app/package.json ./package.json
 
-# Copy built Next.js files
+# Automatically leverage output traces to reduce image size
+# https://nextjs.org/docs/advanced-features/output-file-tracing
 COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
 COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
 
+USER nextjs
 
-# Expose port
 EXPOSE 5174
 
-# Set port environment variable
 ENV PORT=5174
-ENV HOSTNAME="0.0.0.0"
 
-# Start the application
-CMD ["npm", "start"]
\ No newline at end of file
+# server.js is created by next build from the standalone output
+# https://nextjs.org/docs/pages/api-reference/config/next-config-js/output
+ENV HOSTNAME="0.0.0.0"
+CMD ["node", "server.js"]
\ No newline at end of file
diff --git a/next.config.ts b/next.config.ts
index e9ffa30..38525b6 100644
--- a/next.config.ts
+++ b/next.config.ts
@@ -1,7 +1,8 @@
 import type { NextConfig } from "next";
 
 const nextConfig: NextConfig = {
-  /* config options here */
+  output: 'standalone',
+  /* other config options here */
 };
 
-export default nextConfig;
+export default nextConfig;
\ No newline at end of file
diff --git a/src/app/globals.css b/src/app/globals.css
index 25f0d4f..ec37fa5 100644
--- a/src/app/globals.css
+++ b/src/app/globals.css
@@ -8,6 +8,7 @@
 @theme {
   /* My Primary Colors */
   --color-primary-500: #111d45;
+  --color-primary-600: #142352;
   --color-primary-700: #172960;
   --color-primary-900: #1e347b;
   --color-primary-950: #213a89;
@@ -249,3 +250,29 @@ body{
          leading-5 sm:leading-6 md:leading-7 
          max-w-xs sm:max-w-lg md:max-w-2xl lg:max-w-3xl;
 }
+
+
+
+/* Animations */
+
+@keyframes shimmer {
+  0% { transform: translateX(-100%) skewX(-12deg); }
+  100% { transform: translateX(200%) skewX(-12deg); }
+}
+
+/* .scrollbar-thin::-webkit-scrollbar {
+  width: 4px;
+}
+
+.scrollbar-thin::-webkit-scrollbar-track {
+  background: transparent;
+}
+
+.scrollbar-thumb-blue-200::-webkit-scrollbar-thumb {
+  background-color: rgb(191 219 254);
+  border-radius: 2px;
+}
+
+.hover\:scrollbar-thumb-blue-300:hover::-webkit-scrollbar-thumb {
+  background-color: rgb(147 197 253);
+} */
\ No newline at end of file
diff --git a/src/data/DashboardRoutes.ts b/src/data/DashboardRoutes.ts
index a677ea9..a3cdb67 100644
--- a/src/data/DashboardRoutes.ts
+++ b/src/data/DashboardRoutes.ts
@@ -50,6 +50,11 @@ export const dashboardRoutes: NavigationItemData[] = [
     iconName: "NotebookPen",
     href: "/dashboard/donations",
   },
+  {
+    label: "Market Place",
+    iconName: "NotebookPen",
+    href: "/dashboard/market-place",
+  },
   {
     label: "Settings",
     iconName: "Settings",
