  const getTimelogs = useCallback(() => {
    let queryParams = [
      `perPage=${pagination.perPage}`,
      `page=${pagination.page}`,
      `sortField=${encodeURIComponent(pagination.sortField)}`,
      `sortDirection=${encodeURIComponent(pagination.sortDirection)}`,
    ];

    if (typeof filterDate === "string") {
      queryParams.push(`specificDate=${encodeURIComponent(filterDate)}`);
    } else if (filterDate.startDate && filterDate.endDate) {
      queryParams.push(`startDate=${encodeURIComponent(filterDate.startDate)}`);
      queryParams.push(`endDate=${encodeURIComponent(filterDate.endDate)}`);
    } else {
      queryParams.push(`filters=${encodeURIComponent(filterDate?.filter || "")}`);
    }

    timelogService.getTimelogs(queryParams.join("&"), setTimelogs, setIsLoading, setError);
  }, [pagination, filterDate]);
