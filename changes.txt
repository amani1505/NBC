I want the error page ,not found page and the under maintenance to independent page that are not under any layout

import { Suspense, lazy } from "react";
import { BrowserRouter, Routes, Route } from "react-router-dom";
import Footer from "./components/Home/Footer";
import MainNavigation from "./components/Navigation/MainNavigation";
import "./App.css";
import BusinessBanking from "./Pages/Landing/BusinessBanking/BusinessBanking";
import CMSLayout from "./Pages/Dashboard/CMS/CMSLayout";
import UserDashboardLayout from "./Pages/Dashboard/User/UserDashboardLayout";

// Lazy Loading Pages
const Home = lazy(() => import("./Pages/Landing/Home"));
const PersonalBanking = lazy(
  () => import("./Pages/Landing/PersonalBaking/PersonalBanking")
);
const NotFound = lazy(() => import("./Pages/Status/NotFound"));
const Error = lazy(() => import("./Pages/Status/Error"));
const UnderMaintenance = lazy(() => import("./Pages/Status/UnderMaintenance"));
const Diaspora = lazy(() => import("./Pages/Landing/PersonalBaking/Diaspora"));
const Individual = lazy(
  () => import("./Pages/Landing/PersonalBaking/Individual")
);
const Private = lazy(() => import("./Pages/Landing/PersonalBaking/Private"));
const Privilages = lazy(
  () => import("./Pages/Landing/PersonalBaking/Privilages")
);
const SingleAccount = lazy(() => import("./Pages/Landing/SingleAccount"));
const SingleInsurance = lazy(() => import("./Pages/Landing/SingleInsurance"));
const SingleLoan = lazy(() => import("./Pages/Landing/SingleLoan"));
const WaytoBank = lazy(() => import("./Pages/Landing/WaytoBank"));
const CompareAccount = lazy(() => import("./Pages/Landing/CompareAccount"));

// ABOUT PAGES
const About = lazy(() => import("./Pages/Landing/About/About"));
const ContactUs = lazy(() => import("./Pages/Landing/ContactUs"));
const Overview = lazy(() => import("./Pages/Landing/About/Overview"));
const Careers = lazy(() => import("./Pages/Landing/About/Careers"));
const Governance = lazy(() => import("./Pages/Landing/About/Governance"));
const InvestorRelations = lazy(
  () => import("./Pages/Landing/About/InvestorRelations")
);
const News = lazy(() => import("./Pages/Landing/About/News"));
const Sustainability = lazy(
  () => import("./Pages/Landing/About/Sustainability")
);
const Tenders = lazy(() => import("./Pages/Landing/About/Tenders"));

// Business Banking Pages
const SMEs = lazy(() => import("./Pages/Landing/BusinessBanking/SMEs"));
const MicroEnterprise = lazy(
  () => import("./Pages/Landing/BusinessBanking/MicroEnterprise")
);
const Commercial = lazy(
  () => import("./Pages/Landing/BusinessBanking/Commercial")
);

const WhistleBlowing = lazy(() => import("./Pages/Landing/WhistleBlowing"));
const WebTerms = lazy(() => import("./Pages/Landing/WebTerms"));
const TermsCondition = lazy(() => import("./Pages/Landing/TermsCondition"));
const DataPrivacy = lazy(() => import("./Pages/Landing/DataPrivacy"));

const SingleNews = lazy(() => import("./Pages/Landing/SingleNews"));

// Security Pages
const SecurityCenter = lazy(() => import("./Pages/Landing/SecurityCenter"));
const FraudaAlert = lazy(() => import("./Pages/Landing/FraudAlert"));

// Currency Converter
const CurrencyConvetor = lazy(() => import("./Pages/Landing/CurrencyConvetor"));

// CMS DASHBOARD PAGES
// import CMSDashboard from "./Pages/Dashboard/CMS/CMSPages/CMSDashboard";
const CMSDashboard = lazy(
  () => import("./Pages/Dashboard/CMS/CMSPages/CMSDashboard")
);
const CMSSection = lazy(
  () => import("./Pages/Dashboard/CMS/CMSPages/Sections")
);

// DASHBOARD PAGES

const UserDashboard = lazy(
  () => import("@/Pages/Dashboard/User/UserDashboard")
);

// Layout Components
const MainLayout = ({ children }: { children: React.ReactNode }) => (
  <>
    <MainNavigation />
    {children}
    <Footer />
  </>
);

const LoadingFallback = () => (
  <div style={{ textAlign: "center", marginTop: "2rem" }}>Loading...</div>
);

function App() {
  return (
    <BrowserRouter>
      <Suspense fallback={<LoadingFallback />}>
        <Routes>
          {/* USER DASHBOARD */}
          <Route path="dashboard" element={<UserDashboardLayout />}>
            <Route index element={<UserDashboard />} />
          </Route>

          {/* CMS Dashboard Routes - No navigation/footer */}
          <Route path="/cms/*" element={<CMSLayout />}>
            <Route index element={<CMSDashboard />} />
            <Route path="sections" element={<CMSSection />} />
          </Route>

          {/* Main Website Routes - With navigation/footer */}
          <Route
            path="/*"
            element={
              <MainLayout>
                <Routes>
                  {/* Home Route */}
                  <Route path="/" element={<Home />} />

                  {/* Personal Banking Routes */}
                  <Route path="personal-banking" element={<PersonalBanking />}>
                    <Route index element={<Individual />} />
                    <Route path="diaspora" element={<Diaspora />} />
                    <Route path="priveleged" element={<Privilages />} />
                    <Route path="private" element={<Private />} />
                  </Route>

                  {/* Dynamic Product Routes */}
                  <Route
                    path="accounts/:accountName"
                    element={<SingleAccount />}
                  />
                  <Route path="loans/:loanName" element={<SingleLoan />} />
                  <Route
                    path="insurances/:insuranceName"
                    element={<SingleInsurance />}
                  />
                  <Route
                    path="way-to-bank/:wayToBankName"
                    element={<WaytoBank />}
                  />
                  <Route
                    path="compare-account/:compareAccountName"
                    element={<CompareAccount />}
                  />

                  {/* About Section Routes */}
                  <Route path="about" element={<About />}>
                    <Route index element={<Overview />} />
                    <Route path="careers" element={<Careers />} />
                    <Route path="governance" element={<Governance />} />
                    <Route
                      path="investor-relations"
                      element={<InvestorRelations />}
                    />
                    <Route path="news" element={<News />} />
                    <Route path="sustainability" element={<Sustainability />} />
                    <Route path="tenders" element={<Tenders />} />
                  </Route>

                  {/* Contact Route */}
                  <Route path="contact-us" element={<ContactUs />} />

                  {/* Business Banking Routes */}
                  <Route path="business-banking" element={<BusinessBanking />}>
                    <Route index element={<MicroEnterprise />} />
                    <Route path="smes" element={<SMEs />} />
                    <Route path="commercial" element={<Commercial />} />
                  </Route>

                  {/* Legal & Compliance Routes */}
                  <Route path="whistle-blowing" element={<WhistleBlowing />} />
                  <Route path="website-terms" element={<WebTerms />} />
                  <Route path="terms-condition" element={<TermsCondition />} />
                  <Route path="data-privacy" element={<DataPrivacy />} />

                  {/* News Route */}
                  <Route path="news/:newsName" element={<SingleNews />} />

                  {/* Security Routes */}
                  <Route path="security-center" element={<SecurityCenter />} />
                  <Route path="fraud-alert" element={<FraudaAlert />} />

                  {/* Utility Routes */}
                  <Route
                    path="currency-convetor"
                    element={<CurrencyConvetor />}
                  />

                  {/* Status Routes */}
                  <Route path="error" element={<Error />} />
                  <Route
                    path="under-maintenance"
                    element={<UnderMaintenance />}
                  />

                  {/* 404 Route - Must be last */}
                  <Route path="*" element={<NotFound />} />
                </Routes>
              </MainLayout>
            }
          />
        </Routes>
      </Suspense>
    </BrowserRouter>
  );
}

export default App;


