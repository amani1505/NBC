     {
@@ -25,7 +25,7 @@ function EventMainContent() {
       image: "/images/call.png",
       description:
         "Help us collect food donations for those in need during the holiday season.",
-      compareLink: "Donate",
+        donateLink: "Donate",
       learnMoreLink: "/events/community-clean-up",
     },
     {
diff --git a/src/app/globals.css b/src/app/globals.css
index 5f400ed..2a9bf49 100644
--- a/src/app/globals.css
+++ b/src/app/globals.css
@@ -97,6 +97,14 @@
   --sidebar-ring: oklch(0.709 0.01 56.259);
   --background: oklch(1 0 0);
   --foreground: oklch(0.147 0.004 49.25);
+
+
+   /* Route colors */
+
+  --route-active: 0 84% 60%;
+  --route-active-foreground: 255 255 255;
+  --route-boundary: 214 95% 56%;
+  --route-inactive: 220 13% 91%;
 }
 
 html {
diff --git a/src/components/shared/Card/DetailedCard.tsx b/src/components/shared/Card/DetailedCard.tsx
index e0a3429..45310cb 100644
--- a/src/components/shared/Card/DetailedCard.tsx
+++ b/src/components/shared/Card/DetailedCard.tsx
@@ -15,7 +15,7 @@ type PressReleaseCardProps = {
   className?: string;
   rightSide?: boolean;
   learnMoreLink?: string;
-  compareLink?: string;
+  donateLink?: string;
   buttonText?: string;
 };
 
@@ -27,7 +27,7 @@ const DetailedCard = ({
   badgeText,
   rightSide = false,
   learnMoreLink,
-  compareLink,
+  donateLink,
   buttonText,
 }: PressReleaseCardProps) => {
   const navigate = useRouter();
@@ -90,15 +90,15 @@ const DetailedCard = ({
           {description}
         </p>
         <div className="flex items-center justify-between mt-auto pt-2">
-          {compareLink && (
+          {donateLink && (
             <Button
               variant="outline"
               onClick={() => {
-                navigate.push(compareLink);
+                navigate.push(donateLink);
               }}
             >
-              Compare Account
-              <ChevronRight />
+           Donate
+              {/* <ChevronRight /> */}
             </Button>
           )}
 
diff --git a/src/components/shared/registration/GroupRegistration.tsx b/src/components/shared/registration/GroupRegistration.tsx
index cf0c708..28e8b13 100644
--- a/src/components/shared/registration/GroupRegistration.tsx
+++ b/src/components/shared/registration/GroupRegistration.tsx
@@ -5,8 +5,8 @@ import { cn } from "@/lib/utils";
 import { FormInput } from "@/components/ui/form-input";
 import { FormTextarea } from "@/components/ui/form-textarea";
 import { Checkbox } from "@/components/ui/checkbox";
-
 import { Button } from "@/components/ui/button";
+import PhoneNumberInput from "@/components/ui/phone-number-input"
 
 interface GroupRegistrationProps {
   onNext: (data: GroupRegistrationData) => void;
@@ -101,8 +101,8 @@ export function GroupRegistration({
   };
 
   return (
-    <div className={cn("w-full max-w-3xl mx-auto animate-fade-in", className)}>
-      <div className="text-center mb-8">
+    <div className={cn("w-full  mx-auto animate-fade-in px-4", className)}>
+      <div className="text-center mb-4">
         <h2 className="text-3xl font-bold text-foreground mb-2">
           Create Your One Time Group
         </h2>
@@ -112,7 +112,7 @@ export function GroupRegistration({
       </div>
 
       <form onSubmit={handleSubmit} className="space-y-6">
-        <div className="bg-card rounded-xl p-8 shadow-lg border border-border">
+        <div className="bg-card rounded-xl ">
           <div className="space-y-6">
             {/* Group Name */}
             <FormInput
@@ -162,18 +162,27 @@ export function GroupRegistration({
             </div>
 
             {/* Phone Number */}
-            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
-              <div className="md:col-span-1">
-                <FormInput
+            <div className="">
+              {/* <div className="md:col-span-1"> */}
+                {/* <FormInput
                   label="Representative Phone"
                   placeholder="+255"
                   value="+255"
                   readOnly
                   className="bg-marathon-gray-light"
+                /> */}
+              {/* </div> */}
+                <PhoneNumberInput 
+                label="Representative Phone"
+                value={formData.representativePhone}
+                onChange={(value: string) => {
+                  updateFormData("representativePhone", value);
+                }}
+                required
                 />
-              </div>
-              <div className="md:col-span-2">
-                <FormInput
+
+              {/* <div className="md:col-span-2"> */}
+                {/* <FormInput
                   label="&nbsp;"
                   placeholder="Month"
                   required
@@ -182,8 +191,8 @@ export function GroupRegistration({
                     updateFormData("representativePhone", e.target.value)
                   }
                   error={errors.representativePhone}
-                />
-              </div>
+                /> */}
+              {/* </div> */}
             </div>
 
             {/* Terms and Conditions */}
diff --git a/src/components/shared/registration/MarathonRegistration.tsx b/src/components/shared/registration/MarathonRegistration.tsx
index 75c6cca..d01e766 100644
--- a/src/components/shared/registration/MarathonRegistration.tsx
+++ b/src/components/shared/registration/MarathonRegistration.tsx
@@ -54,17 +54,17 @@ export function MarathonRegistration() {
   };
 
   return (
-    <div className="min-h-screen bg-background py-8 px-4">
+    <div className="  py-8 px-4 border rounded-lg">
       <div className="max-w-6xl mx-auto">
         {/* Header */}
-        <div className="text-center mb-12 animate-fade-in">
+        {/* <div className="text-center mb-12 animate-fade-in">
           <h1 className="text-4xl md:text-5xl font-bold text-foreground mb-4">
             Group Marathon 2025 Registration
           </h1>
           <p className="text-lg text-marathon-gray max-w-2xl mx-auto">
             Complete the registration form to secure your spot in the event.
           </p>
-        </div>
+        </div> */}
 
         {/* Stepper */}
         <div className="mb-12 animate-slide-in">
diff --git a/src/components/ui/form-select.tsx b/src/components/ui/form-select.tsx
index 0ef0455..835f4df 100644
--- a/src/components/ui/form-select.tsx
+++ b/src/components/ui/form-select.tsx
@@ -1,51 +1,139 @@
-import { forwardRef } from "react";
-import { cn } from "@/lib/utils";
-import { ChevronDown } from "lucide-react";
+import { Label } from '@/components/ui/label';
+import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from '@/components/ui/select';
 
-export interface FormSelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {
+export interface SelectOption {
+  value: string;
+  label: string;
+  disabled?: boolean;
+}
+
+interface FormSelectProps {
+  /**
+   * Current selected value
+   */
+  value: string;
+  /**
+   * Callback function called when value changes
+   */
+  onValueChange: (value: string) => void;
+  /**
+   * Array of options to display
+   */
+  options: SelectOption[];
+  /**
+   * Label text for the select field
+   */
   label?: string;
-  error?: string;
+  /**
+   * Placeholder text when no option is selected
+   */
+  placeholder?: string;
+  /**
+   * Custom CSS class for the container
+   */
+  className?: string;
+  /**
+   * Custom CSS class for the select trigger
+   */
+  triggerClassName?: string;
+  /**
+   * Custom CSS class for the label
+   */
+  labelClassName?: string;
+  /**
+   * Whether the component is disabled
+   * @default false
+   */
+  disabled?: boolean;
+  /**
+   * Whether the field is required
+   * @default false
+   */
   required?: boolean;
-  options: { value: string; label: string }[];
+  /**
+   * Error message to display
+   */
+  error?: string;
+  /**
+   * Helper text to display below the select
+   */
+  helperText?: string;
+  /**
+   * ID for the select element
+   */
+  id?: string;
+  /**
+   * Name attribute for the select element
+   */
+  name?: string;
 }
 
-const FormSelect = forwardRef<HTMLSelectElement, FormSelectProps>(
-  ({ className, label, error, required, options, ...props }, ref) => {
-    return (
-      <div className="space-y-2">
-        {label && (
-          <label className="text-sm font-medium text-foreground">
-            {label}
-            {required && <span className="text-destructive ml-1">*</span>}
-          </label>
-        )}
-        <div className="relative">
-          <select
-            className={cn(
-              "flex h-12 w-full appearance-none rounded-lg border border-form-border bg-form-background px-4 py-3 pr-10 text-sm transition-all duration-300",
-              "focus:border-form-focus focus:ring-2 focus:ring-form-focus/20 focus:outline-none",
-              "hover:border-marathon-gray-light hover:bg-marathon-gray-light/30",
-              "disabled:cursor-not-allowed disabled:opacity-50",
-              error && "border-destructive focus:border-destructive focus:ring-destructive/20",
-              className
-            )}
-            ref={ref}
-            {...props}
-          >
-            {options.map((option) => (
-              <option key={option.value} value={option.value}>
-                {option.label}
-              </option>
-            ))}
-          </select>
-          <ChevronDown className="absolute right-3 top-1/2 h-4 w-4 -translate-y-1/2 text-marathon-gray pointer-events-none" />
-        </div>
-        {error && <p className="text-sm text-destructive">{error}</p>}
-      </div>
-    );
-  }
-);
-
-FormSelect.displayName = "FormSelect";
+export const FormSelect: React.FC<FormSelectProps> = ({
+  value,
+  onValueChange,
+  options,
+  label,
+  placeholder = "Select an option",
+  className = "mb-6",
+  triggerClassName = "w-full hover:border-primary transition-colors duration-200",
+  labelClassName = "text-sm font-medium text-foreground mb-2 block",
+  disabled = false,
+  required = false,
+  error,
+  helperText,
+  id,
+  name
+}) => {
+  return (
+    <div className={className}>
+      {label && (
+        <Label 
+          htmlFor={id} 
+          className={`${labelClassName} ${required ? "after:content-['*'] after:ml-0.5 after:text-red-500" : ""}`}
+        >
+          {label}
+        </Label>
+      )}
+      <Select 
+        value={value} 
+        onValueChange={onValueChange}
+        disabled={disabled}
+        name={name}
+      >
+        <SelectTrigger 
+          id={id}
+          className={`${triggerClassName} ${error ? 'border-red-500 focus:border-red-500' : ''}`}
+        >
+          <SelectValue placeholder={placeholder} />
+        </SelectTrigger>
+        <SelectContent>
+          {options.map((option) => (
+            <SelectItem 
+              key={option.value} 
+              value={option.value}
+              disabled={option.disabled}
+            >
+              {option.label}
+            </SelectItem>
+          ))}
+        </SelectContent>
+      </Select>
+      
+      {/* Error message */}
+      {error && (
+        <p className="mt-1 text-sm text-red-600" role="alert">
+          {error}
+        </p>
+      )}
+      
+      {/* Helper text */}
+      {helperText && !error && (
+        <p className="mt-1 text-sm text-gray-600">
+          {helperText}
+        </p>
+      )}
+    </div>
+  );
+};
 
-export { FormSelect };
\ No newline at end of file
+export default FormSelect;
\ No newline at end of file
diff --git a/src/components/ui/stepper.tsx b/src/components/ui/stepper.tsx
index dfb2769..b970657 100644
--- a/src/components/ui/stepper.tsx
+++ b/src/components/ui/stepper.tsx
@@ -29,11 +29,11 @@ export function Stepper({ steps, currentStep, className }: StepperProps) {
               <div className="flex flex-col items-center">
                 <div
                   className={cn(
-                    "relative flex h-10 w-10 items-center justify-center rounded-full border-2 transition-all duration-300",
+                    "relative flex h-10 w-10 items-center justify-center rounded-full border-2 transition-all duration-300 cursor-pointer",
                     {
                       "border-primary-950 bg-primary-950 text-white": isActive,
                       "border-primary-900 bg-primary-900 text-white": isCompleted,
-                      "border-step-inactive bg-background text-marathon-gray": !isActive && !isCompleted,
+                      "border-step-inactive bg-gray-100 text-marathon-gray": !isActive && !isCompleted,
                     }
                   )}
                 >
@@ -70,7 +70,7 @@ export function Stepper({ steps, currentStep, className }: StepperProps) {
               {!isLast && (
                 <div
                   className={cn(
-                    "mx-4 h-0.5 w-16 transition-colors duration-300 mt-[-2rem]",
+                    "mx-2 h-0.5 w-16 transition-colors duration-300 mt-[-2rem]",
                     {
                       "bg-primary-950": stepNumber < currentStep,
                       "bg-gray-300": stepNumber >= currentStep,
diff --git a/tsconfig.json b/tsconfig.json
index c133409..5fabbce 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -22,6 +22,6 @@
       "@/*": ["./src/*"]
     }
   },
-  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
+  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts", "src/app/(Pages)/(Landing)/events/[id]/registration"],
   "exclude": ["node_modules"]
 }
